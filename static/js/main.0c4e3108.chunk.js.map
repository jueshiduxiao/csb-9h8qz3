{"version":3,"sources":["component/counter/event-handle/onClick.js","component/counter/event-handle/onChange.js","createContext.js","component/antd-button/index.jsx","component/antd-input/index.jsx","component/counter/index.jsx","index.js"],"names":["this","context","states","setState","cnt","e","parseInt","target","value","CreateContext","config","render","stateSetHandles","key","result","useState","computes","fn","Function","props","handle","Error","handles","bind","Button","Input","onClick","require","default","onChange","rootElement","document","getElementById","createRoot"],"mappings":"+FAAA,OAAe,qBACb,MAA6BA,KAAKC,QAA1BC,EAAM,EAANA,QACRC,EADwB,EAARA,UACP,MAAOD,EAAOE,IAAM,EAC9B,C,kCCHD,OAAe,mBAAUC,IAEvBF,EADqBH,KAAKC,QAAlBE,UACC,MAAOG,SAASD,EAAEE,OAAOC,MAAO,IAC1C,C,4DC0DcC,EApDO,SAAH,GAA4B,IAAtBC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAC/B,GAAsB,oBAAXA,EACT,MAAO,GAIT,IAAMT,EAAS,CAAC,EACVU,EAAkB,CAAC,EACzB,IAAK,IAAIC,KAAOH,EAAOR,OAAQ,CAC7B,IAAMY,EAASC,mBAASL,EAAOR,OAAOW,IACtCX,EAAOW,GAAOC,EAAO,GACrBF,EAAgBC,GAAOC,EAAO,EAChC,CAEA,IAUME,EAAW,CAAC,EAClB,IAAK,IAAIH,KAAOH,EAAOM,SAAU,CAC/B,IAAMC,EAAK,IAAIC,SAAS,QAAS,SAAUR,EAAOM,SAASH,IAC3DG,EAASH,GAAOI,EAAGP,EAAOS,MAAOjB,EACnC,CAEA,IAAMD,EAAU,CACdE,SAjBe,SAACU,EAAKL,GACrB,IAAMY,EAASR,EAAgBC,GAC/B,IAAKO,EACH,MAAM,IAAIC,MAAM,aAGlBD,EAAOZ,EACT,EAWEW,MAAOT,EAAOS,MACdjB,SACAc,YAIIM,EAAU,CAAC,EACjB,IAAK,IAAIT,KAAOH,EAAOY,QACrBA,EAAQT,GAAOH,EAAOY,QAAQT,GAAKU,KAAK,CAAEtB,YAG5C,OAAOU,EAAO,CACZV,UACAkB,MAAOT,EAAOS,MACdjB,SACAc,WACAM,WAEJ,ECxDeE,G,YAAM,GCANC,G,YAAK,G,QCEL,WAACN,GAAK,OACnB,cAAC,EAAa,CACZT,OAAQ,CACNS,QACAjB,OAAQ,CACNE,IAAK,GAEPkB,QAAS,CACPI,QAASC,EAAQ,IAA0BC,QAC3CC,SAAUF,EAAQ,IAA2BC,UAGjDjB,OAAQ,gBAAGT,EAAM,EAANA,OAAQoB,EAAO,EAAPA,QAAO,OACxB,gCACE,8BAAMpB,EAAOE,MACb,cAAC,EAAK,CAACI,MAAON,EAAOE,IAAKyB,SAAUP,EAAQO,WAC5C,cAAC,EAAM,CAACH,QAASJ,EAAQI,QAAQ,SAAC,qBAC9B,GAEX,EClBKI,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBnB,OACH,cAAC,aAAU,UACT,cAAC,EAAG,M","file":"static/js/main.0c4e3108.chunk.js","sourcesContent":["export default function () {\n  const { states, setState } = this.context;\n  setState('cnt', states.cnt + 1);\n};\n","export default function (e) {\n  const { setState } = this.context;\n  setState('cnt', parseInt(e.target.value, 10));\n};\n","/**\n * CreateContext 创建组件上下文环境\n * props.config {Object} 配置组件\n * props.config.props {Object} 父组件属性\n * props.config.render {Function} 渲染函数\n */\n\nimport { useState } from \"react\";\n\nconst CreateContext = ({ config, render }) => {\n  if (typeof render !== 'function') {\n    return '';\n  }\n\n  // states\n  const states = {};\n  const stateSetHandles = {};\n  for (let key in config.states) {\n    const result = useState(config.states[key]);\n    states[key] = result[0];\n    stateSetHandles[key] = result[1];\n  }\n\n  const setState = (key, value) => {\n    const handle = stateSetHandles[key];\n    if (!handle) {\n      throw new Error('error key');\n    }\n\n    handle(value);\n  };\n\n  // computes\n  const computes = {};\n  for (let key in config.computes) {\n    const fn = new Function('props', 'states', config.computes[key]);\n    computes[key] = fn(config.props, states);\n  }\n\n  const context = {\n    setState,\n    props: config.props,\n    states,\n    computes,\n  };\n\n  // handles\n  const handles = {};\n  for (let key in config.handles) {\n    handles[key] = config.handles[key].bind({ context });\n  }\n\n  return render({\n    context,\n    props: config.props,\n    states,\n    computes,\n    handles,\n  });\n};\n\nexport default CreateContext;\n","import \"antd/lib/button/style/index.css\";\nimport Button from 'antd/es/button';\n\nexport default Button;\n","import \"antd/lib/input/style/index.css\";\nimport Input from 'antd/es/input';\n\nexport default Input;\n","import React from \"react\";\nimport CreateContext from '../../createContext';\nimport Button from '../../component/antd-button';\nimport Input from '../../component/antd-input';\n\nexport default (props) => (\n  <CreateContext\n    config={{\n      props,\n      states: {\n        cnt: 0,\n      },\n      handles: {\n        onClick: require('./event-handle/onClick').default,\n        onChange: require('./event-handle/onChange').default,\n      }\n    }}\n    render={({ states, handles }) => (\n      <div>\n        <div>{states.cnt}</div>\n        <Input value={states.cnt} onChange={handles.onChange} />\n        <Button onClick={handles.onClick}>点击+1</Button>\n      </div>\n    )} />\n);\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./component/counter\";\n//import App from \"./component/props-list/test\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}